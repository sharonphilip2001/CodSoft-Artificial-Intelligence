# -*- coding: utf-8 -*-
"""TASK 1- CHATBOT WITH RULE-BASED RESPONSES

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15d4SN0EEVhU3aVs-Z6yvXGflZtFixblQ
"""

pip install gradio

import gradio as gr
import random
from datetime import datetime

# Memory to store user info
memory = {}

# Predefined list of interesting facts
interesting_facts = [
    "Octopuses have three hearts!",
    "Bananas are berries, but strawberries aren't!",
    "Honey never spoils â€” archaeologists found 3000-year-old edible honey!"
]

# Predefined dropdown options
selectable_questions = [
    "Hi",
    "What is your name?",
    "Where are you from?",
    "How are you?",
    "Do you have any hobbies?",
    "Tell me a joke",
    "Tell me an interesting fact",
    "What is the time now?",
    "Bye"
]

# Chatbot logic
def chatbot(user_input, history):
    user_input = user_input.lower()
    now = datetime.now().strftime("%H:%M:%S")

    if "hi" in user_input or "hello" in user_input:
        reply = "Hi there! I'm a chatbot here to assist you. What's your name?"
    elif "my name is" in user_input:
        name = user_input.split("my name is")[-1].strip()
        memory['name'] = name
        reply = f"Nice to meet you, {name}!"
    elif "what is your name" in user_input:
        reply = "I'm just a chatbot, so I don't have a name, but you can call me anything."
    elif "where are you from" in user_input:
        reply = "I'm from the digital world, always ready to chat!"
    elif "how are you" in user_input:
        reply = "I'm fine. How about you?"
    elif "do you have any hobbies" in user_input or "interests" in user_input:
        reply = "I'm always busy helping users, so my hobby is chatting with people like you!"
    elif "what did you eat today" in user_input or "what do you like to eat" in user_input:
        reply = "I don't eat, but I can help you find delicious recipes and food-related information."
    elif "favorite color" in user_input:
        reply = "I'm a chatbot, so I don't have personal preferences for colors."
    elif "do you enjoy listening to music" in user_input:
        reply = "I can't listen to music, but I'm here to chat about it!"
    elif "tell me a joke" in user_input or "another joke" in user_input:
        reply = "Why did the scarecrow win an award? Because he was outstanding in his field!"
    elif "tell me an interesting fact" in user_input:
        reply = random.choice(interesting_facts)
    elif "weather in" in user_input:
        reply = "I can help you with weather information soon. Stay tuned for updates!"
    elif "latest news" in user_input:
        reply = "I can help you with the latest news soon. Stay tuned for updates!"
    elif "translate" in user_input:
        reply = "I can help you with translations soon. Stay tuned for updates!"
    elif "what is the time now" in user_input:
        reply = now
    elif "bye" in user_input:
        reply = f"Goodbye, {memory.get('name', 'friend')}! Take care and have a great day!"
    else:
        reply = "I'm sorry, I didn't understand that. Can you please rephrase your sentence?"

    history = history or []
    history.append((user_input, reply))
    return history, history

# Build the Gradio GUI
with gr.Blocks() as demo:
    gr.Markdown("## Chatbot with Dropdown Questions")

    chatbot_ui = gr.Chatbot()
    msg = gr.Textbox(placeholder="Type your message here...")
    dropdown = gr.Dropdown(choices=selectable_questions, label="Or select a question")
    clear = gr.Button("Clear")

    # User types input manually
    msg.submit(chatbot, inputs=[msg, chatbot_ui], outputs=[chatbot_ui, chatbot_ui])

    # User selects a predefined question
    dropdown.change(chatbot, inputs=[dropdown, chatbot_ui], outputs=[chatbot_ui, chatbot_ui])

    # Clear the chat
    clear.click(lambda: ([], []), outputs=[chatbot_ui, chatbot_ui])

# Launch the chatbot app
demo.launch()